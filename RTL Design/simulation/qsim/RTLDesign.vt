// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/12/2024 15:16:08"
                                                                        
// Verilog Self-Checking Test Bench (with test vectors) for design :    RTLDesign
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module RTLDesign_vlg_sample_tst(
	clk,
	data,
	nRST,
	sampler_tx
);
input  clk;
input [7:0] data;
input  nRST;
output sampler_tx;

reg sample;
time current_time;
always @(clk or data or nRST)
                                                                                
begin                                                 
 if ($realtime > 0)                                   
 begin                                                
	if ($realtime == 0 || $realtime != current_time)  
	begin									          
		if (sample === 1'bx)                          
			sample = 0;                               
		else                                          
			sample = ~sample;                         
	end										          
	current_time = $realtime;					      
 end                                                  
end                                                   

assign sampler_tx = sample;
endmodule

module RTLDesign_vlg_check_tst (
	addr,
	done,
	max,
	min,
	sampler_rx
);
input [10:0] addr;
input  done;
input [7:0] max;
input [7:0] min;
input sampler_rx;

reg [10:0] addr_expected;
reg  done_expected;
reg [7:0] max_expected;
reg [7:0] min_expected;

reg [10:0] addr_prev;
reg  done_prev;
reg [7:0] max_prev;
reg [7:0] min_prev;

reg [10:0] addr_expected_prev;
reg  done_expected_prev;
reg [7:0] max_expected_prev;
reg [7:0] min_expected_prev;

reg [10:0] last_addr_exp;
reg  last_done_exp;
reg [7:0] last_max_exp;
reg [7:0] last_min_exp;

reg trigger;

integer i;
integer nummismatches;

reg [1:4] on_first_change ;


initial
begin
trigger = 0;
i = 0;
nummismatches = 0;
on_first_change = 4'b1;
end

// update real /o prevs

always @(trigger)
begin
	addr_prev = addr;
	done_prev = done;
	max_prev = max;
	min_prev = min;
end

// update expected /o prevs

always @(trigger)
begin
	addr_expected_prev = addr_expected;
	done_expected_prev = done_expected;
	max_expected_prev = max_expected;
	min_expected_prev = min_expected;
end


// expected addr[ 10 ]
initial
begin
	addr_expected[10] = 1'bX;
end 
// expected addr[ 9 ]
initial
begin
	addr_expected[9] = 1'bX;
end 
// expected addr[ 8 ]
initial
begin
	addr_expected[8] = 1'bX;
end 
// expected addr[ 7 ]
initial
begin
	addr_expected[7] = 1'bX;
end 
// expected addr[ 6 ]
initial
begin
	addr_expected[6] = 1'bX;
end 
// expected addr[ 5 ]
initial
begin
	addr_expected[5] = 1'bX;
end 
// expected addr[ 4 ]
initial
begin
	addr_expected[4] = 1'bX;
end 
// expected addr[ 3 ]
initial
begin
	addr_expected[3] = 1'bX;
end 
// expected addr[ 2 ]
initial
begin
	addr_expected[2] = 1'bX;
end 
// expected addr[ 1 ]
initial
begin
	addr_expected[1] = 1'bX;
end 
// expected addr[ 0 ]
initial
begin
	addr_expected[0] = 1'bX;
end 

// expected done
initial
begin
	done_expected = 1'bX;
end 
// expected max[ 7 ]
initial
begin
	max_expected[7] = 1'bX;
end 
// expected max[ 6 ]
initial
begin
	max_expected[6] = 1'bX;
end 
// expected max[ 5 ]
initial
begin
	max_expected[5] = 1'bX;
end 
// expected max[ 4 ]
initial
begin
	max_expected[4] = 1'bX;
end 
// expected max[ 3 ]
initial
begin
	max_expected[3] = 1'bX;
end 
// expected max[ 2 ]
initial
begin
	max_expected[2] = 1'bX;
end 
// expected max[ 1 ]
initial
begin
	max_expected[1] = 1'bX;
end 
// expected max[ 0 ]
initial
begin
	max_expected[0] = 1'bX;
end 
// expected min[ 7 ]
initial
begin
	min_expected[7] = 1'bX;
end 
// expected min[ 6 ]
initial
begin
	min_expected[6] = 1'bX;
end 
// expected min[ 5 ]
initial
begin
	min_expected[5] = 1'bX;
end 
// expected min[ 4 ]
initial
begin
	min_expected[4] = 1'bX;
end 
// expected min[ 3 ]
initial
begin
	min_expected[3] = 1'bX;
end 
// expected min[ 2 ]
initial
begin
	min_expected[2] = 1'bX;
end 
// expected min[ 1 ]
initial
begin
	min_expected[1] = 1'bX;
end 
// expected min[ 0 ]
initial
begin
	min_expected[0] = 1'bX;
end 
// generate trigger
always @(addr_expected or addr or done_expected or done or max_expected or max or min_expected or min)
begin
	trigger <= ~trigger;
end

always @(posedge sampler_rx or negedge sampler_rx)
begin
`ifdef debug_tbench
	$display("Scanning pattern %d @time = %t",i,$realtime );
	i = i + 1;
	$display("| expected addr = %b | expected done = %b | expected max = %b | expected min = %b | ",addr_expected_prev,done_expected_prev,max_expected_prev,min_expected_prev);
	$display("| real addr = %b | real done = %b | real max = %b | real min = %b | ",addr_prev,done_prev,max_prev,min_prev);
`endif
	if (
		( addr_expected_prev[0] !== 1'bx ) && ( addr_prev[0] !== addr_expected_prev[0] )
		&& ((addr_expected_prev[0] !== last_addr_exp[0]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port addr[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", addr_expected_prev);
		$display ("     Real value = %b", addr_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_addr_exp[0] = addr_expected_prev[0];
	end
	if (
		( addr_expected_prev[1] !== 1'bx ) && ( addr_prev[1] !== addr_expected_prev[1] )
		&& ((addr_expected_prev[1] !== last_addr_exp[1]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port addr[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", addr_expected_prev);
		$display ("     Real value = %b", addr_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_addr_exp[1] = addr_expected_prev[1];
	end
	if (
		( addr_expected_prev[2] !== 1'bx ) && ( addr_prev[2] !== addr_expected_prev[2] )
		&& ((addr_expected_prev[2] !== last_addr_exp[2]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port addr[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", addr_expected_prev);
		$display ("     Real value = %b", addr_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_addr_exp[2] = addr_expected_prev[2];
	end
	if (
		( addr_expected_prev[3] !== 1'bx ) && ( addr_prev[3] !== addr_expected_prev[3] )
		&& ((addr_expected_prev[3] !== last_addr_exp[3]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port addr[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", addr_expected_prev);
		$display ("     Real value = %b", addr_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_addr_exp[3] = addr_expected_prev[3];
	end
	if (
		( addr_expected_prev[4] !== 1'bx ) && ( addr_prev[4] !== addr_expected_prev[4] )
		&& ((addr_expected_prev[4] !== last_addr_exp[4]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port addr[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", addr_expected_prev);
		$display ("     Real value = %b", addr_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_addr_exp[4] = addr_expected_prev[4];
	end
	if (
		( addr_expected_prev[5] !== 1'bx ) && ( addr_prev[5] !== addr_expected_prev[5] )
		&& ((addr_expected_prev[5] !== last_addr_exp[5]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port addr[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", addr_expected_prev);
		$display ("     Real value = %b", addr_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_addr_exp[5] = addr_expected_prev[5];
	end
	if (
		( addr_expected_prev[6] !== 1'bx ) && ( addr_prev[6] !== addr_expected_prev[6] )
		&& ((addr_expected_prev[6] !== last_addr_exp[6]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port addr[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", addr_expected_prev);
		$display ("     Real value = %b", addr_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_addr_exp[6] = addr_expected_prev[6];
	end
	if (
		( addr_expected_prev[7] !== 1'bx ) && ( addr_prev[7] !== addr_expected_prev[7] )
		&& ((addr_expected_prev[7] !== last_addr_exp[7]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port addr[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", addr_expected_prev);
		$display ("     Real value = %b", addr_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_addr_exp[7] = addr_expected_prev[7];
	end
	if (
		( addr_expected_prev[8] !== 1'bx ) && ( addr_prev[8] !== addr_expected_prev[8] )
		&& ((addr_expected_prev[8] !== last_addr_exp[8]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port addr[8] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", addr_expected_prev);
		$display ("     Real value = %b", addr_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_addr_exp[8] = addr_expected_prev[8];
	end
	if (
		( addr_expected_prev[9] !== 1'bx ) && ( addr_prev[9] !== addr_expected_prev[9] )
		&& ((addr_expected_prev[9] !== last_addr_exp[9]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port addr[9] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", addr_expected_prev);
		$display ("     Real value = %b", addr_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_addr_exp[9] = addr_expected_prev[9];
	end
	if (
		( addr_expected_prev[10] !== 1'bx ) && ( addr_prev[10] !== addr_expected_prev[10] )
		&& ((addr_expected_prev[10] !== last_addr_exp[10]) ||
			on_first_change[1])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port addr[10] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", addr_expected_prev);
		$display ("     Real value = %b", addr_prev);
		nummismatches = nummismatches + 1;
		on_first_change[1] = 1'b0;
		last_addr_exp[10] = addr_expected_prev[10];
	end
	if (
		( done_expected_prev !== 1'bx ) && ( done_prev !== done_expected_prev )
		&& ((done_expected_prev !== last_done_exp) ||
			on_first_change[2])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port done :: @time = %t",  $realtime);
		$display ("     Expected value = %b", done_expected_prev);
		$display ("     Real value = %b", done_prev);
		nummismatches = nummismatches + 1;
		on_first_change[2] = 1'b0;
		last_done_exp = done_expected_prev;
	end
	if (
		( max_expected_prev[0] !== 1'bx ) && ( max_prev[0] !== max_expected_prev[0] )
		&& ((max_expected_prev[0] !== last_max_exp[0]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port max[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", max_expected_prev);
		$display ("     Real value = %b", max_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_max_exp[0] = max_expected_prev[0];
	end
	if (
		( max_expected_prev[1] !== 1'bx ) && ( max_prev[1] !== max_expected_prev[1] )
		&& ((max_expected_prev[1] !== last_max_exp[1]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port max[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", max_expected_prev);
		$display ("     Real value = %b", max_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_max_exp[1] = max_expected_prev[1];
	end
	if (
		( max_expected_prev[2] !== 1'bx ) && ( max_prev[2] !== max_expected_prev[2] )
		&& ((max_expected_prev[2] !== last_max_exp[2]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port max[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", max_expected_prev);
		$display ("     Real value = %b", max_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_max_exp[2] = max_expected_prev[2];
	end
	if (
		( max_expected_prev[3] !== 1'bx ) && ( max_prev[3] !== max_expected_prev[3] )
		&& ((max_expected_prev[3] !== last_max_exp[3]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port max[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", max_expected_prev);
		$display ("     Real value = %b", max_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_max_exp[3] = max_expected_prev[3];
	end
	if (
		( max_expected_prev[4] !== 1'bx ) && ( max_prev[4] !== max_expected_prev[4] )
		&& ((max_expected_prev[4] !== last_max_exp[4]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port max[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", max_expected_prev);
		$display ("     Real value = %b", max_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_max_exp[4] = max_expected_prev[4];
	end
	if (
		( max_expected_prev[5] !== 1'bx ) && ( max_prev[5] !== max_expected_prev[5] )
		&& ((max_expected_prev[5] !== last_max_exp[5]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port max[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", max_expected_prev);
		$display ("     Real value = %b", max_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_max_exp[5] = max_expected_prev[5];
	end
	if (
		( max_expected_prev[6] !== 1'bx ) && ( max_prev[6] !== max_expected_prev[6] )
		&& ((max_expected_prev[6] !== last_max_exp[6]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port max[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", max_expected_prev);
		$display ("     Real value = %b", max_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_max_exp[6] = max_expected_prev[6];
	end
	if (
		( max_expected_prev[7] !== 1'bx ) && ( max_prev[7] !== max_expected_prev[7] )
		&& ((max_expected_prev[7] !== last_max_exp[7]) ||
			on_first_change[3])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port max[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", max_expected_prev);
		$display ("     Real value = %b", max_prev);
		nummismatches = nummismatches + 1;
		on_first_change[3] = 1'b0;
		last_max_exp[7] = max_expected_prev[7];
	end
	if (
		( min_expected_prev[0] !== 1'bx ) && ( min_prev[0] !== min_expected_prev[0] )
		&& ((min_expected_prev[0] !== last_min_exp[0]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port min[0] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", min_expected_prev);
		$display ("     Real value = %b", min_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_min_exp[0] = min_expected_prev[0];
	end
	if (
		( min_expected_prev[1] !== 1'bx ) && ( min_prev[1] !== min_expected_prev[1] )
		&& ((min_expected_prev[1] !== last_min_exp[1]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port min[1] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", min_expected_prev);
		$display ("     Real value = %b", min_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_min_exp[1] = min_expected_prev[1];
	end
	if (
		( min_expected_prev[2] !== 1'bx ) && ( min_prev[2] !== min_expected_prev[2] )
		&& ((min_expected_prev[2] !== last_min_exp[2]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port min[2] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", min_expected_prev);
		$display ("     Real value = %b", min_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_min_exp[2] = min_expected_prev[2];
	end
	if (
		( min_expected_prev[3] !== 1'bx ) && ( min_prev[3] !== min_expected_prev[3] )
		&& ((min_expected_prev[3] !== last_min_exp[3]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port min[3] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", min_expected_prev);
		$display ("     Real value = %b", min_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_min_exp[3] = min_expected_prev[3];
	end
	if (
		( min_expected_prev[4] !== 1'bx ) && ( min_prev[4] !== min_expected_prev[4] )
		&& ((min_expected_prev[4] !== last_min_exp[4]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port min[4] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", min_expected_prev);
		$display ("     Real value = %b", min_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_min_exp[4] = min_expected_prev[4];
	end
	if (
		( min_expected_prev[5] !== 1'bx ) && ( min_prev[5] !== min_expected_prev[5] )
		&& ((min_expected_prev[5] !== last_min_exp[5]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port min[5] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", min_expected_prev);
		$display ("     Real value = %b", min_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_min_exp[5] = min_expected_prev[5];
	end
	if (
		( min_expected_prev[6] !== 1'bx ) && ( min_prev[6] !== min_expected_prev[6] )
		&& ((min_expected_prev[6] !== last_min_exp[6]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port min[6] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", min_expected_prev);
		$display ("     Real value = %b", min_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_min_exp[6] = min_expected_prev[6];
	end
	if (
		( min_expected_prev[7] !== 1'bx ) && ( min_prev[7] !== min_expected_prev[7] )
		&& ((min_expected_prev[7] !== last_min_exp[7]) ||
			on_first_change[4])
	)
	begin
		$display ("ERROR! Vector Mismatch for output port min[7] :: @time = %t",  $realtime);
		$display ("     Expected value = %b", min_expected_prev);
		$display ("     Real value = %b", min_prev);
		nummismatches = nummismatches + 1;
		on_first_change[4] = 1'b0;
		last_min_exp[7] = min_expected_prev[7];
	end

	trigger <= ~trigger;
end
initial 

begin 
$timeformat(-12,3," ps",6);
#1000000;
if (nummismatches > 0)
	$display ("%d mismatched vectors : Simulation failed !",nummismatches);
else
	$display ("Simulation passed !");
$finish;
end 
endmodule

module RTLDesign_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg [7:0] data;
reg nRST;
// wires                                               
wire [10:0] addr;
wire done;
wire [7:0] max;
wire [7:0] min;

wire sampler;                             

// assign statements (if any)                          
RTLDesign i1 (
// port map - connection between master ports and signals/registers   
	.addr(addr),
	.clk(clk),
	.data(data),
	.done(done),
	.max(max),
	.min(min),
	.nRST(nRST)
);

// clk
initial
begin
	clk = 1'b1;
	clk = #450 1'b0;
	# 450;
	repeat(1110)
	begin
		clk = 1'b1;
		clk = #450 1'b0;
		# 450;
	end
	clk = 1'b1;
end 
// data[ 7 ]
initial
begin
	data[7] = 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #4500 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #5400 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #4500 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #6300 1'b0;
	data[7] = #900 1'b1;
	data[7] = #7200 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #6300 1'b0;
	data[7] = #900 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #7200 1'b1;
	data[7] = #900 1'b0;
	data[7] = #6300 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #5400 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #900 1'b0;
	data[7] = #4500 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #5400 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #7200 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #900 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #4500 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #7200 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #4500 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #7200 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #4500 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #4500 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #6300 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #900 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #7200 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #5400 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #4500 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #4500 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #4500 1'b1;
	data[7] = #900 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #4500 1'b0;
	data[7] = #3600 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #3600 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #9000 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #2700 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #1800 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #2700 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
	data[7] = #900 1'b0;
	data[7] = #900 1'b1;
	data[7] = #900 1'b0;
	data[7] = #1800 1'b1;
end 
// data[ 6 ]
initial
begin
	data[6] = 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #4500 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #4500 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #900 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #4500 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #7200 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #6300 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #4500 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #5400 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #5400 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #4500 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #7200 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #5400 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #7200 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #5400 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #4500 1'b0;
	data[6] = #900 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #900 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #6300 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #4500 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #900 1'b0;
	data[6] = #5400 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #900 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #900 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #4500 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #6300 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #5400 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #900 1'b1;
	data[6] = #5400 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #4500 1'b0;
	data[6] = #900 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #900 1'b1;
	data[6] = #2700 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #2700 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #4500 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #900 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #900 1'b0;
	data[6] = #900 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #1800 1'b1;
	data[6] = #1800 1'b0;
	data[6] = #3600 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #4500 1'b1;
	data[6] = #3600 1'b0;
	data[6] = #900 1'b1;
	data[6] = #5400 1'b0;
end 
// data[ 5 ]
initial
begin
	data[5] = 1'b1;
	data[5] = #900 1'b0;
	data[5] = #4500 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #6300 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #5400 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #6300 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #8100 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #4500 1'b1;
	data[5] = #900 1'b0;
	data[5] = #5400 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #5400 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #4500 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #7200 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #5400 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #900 1'b1;
	data[5] = #9900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #5400 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #5400 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #900 1'b0;
	data[5] = #4500 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #6300 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #4500 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #4500 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #6300 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #4500 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #6300 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #4500 1'b1;
	data[5] = #900 1'b0;
	data[5] = #4500 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #5400 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #3600 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #4500 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #3600 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #5400 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
	data[5] = #4500 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #4500 1'b1;
	data[5] = #1800 1'b0;
	data[5] = #900 1'b1;
	data[5] = #5400 1'b0;
	data[5] = #2700 1'b1;
	data[5] = #2700 1'b0;
	data[5] = #1800 1'b1;
	data[5] = #900 1'b0;
	data[5] = #900 1'b1;
end 
// data[ 4 ]
initial
begin
	data[4] = 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #5400 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #4500 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #4500 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #4500 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #900 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #900 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #900 1'b1;
	data[4] = #7200 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #5400 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #4500 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #7200 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #7200 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #4500 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #4500 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #5400 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #4500 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #6300 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #5400 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #5400 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #5400 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #4500 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #4500 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #4500 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #5400 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #4500 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #900 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #5400 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #4500 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #4500 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #5400 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #4500 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #1800 1'b1;
	data[4] = #900 1'b0;
	data[4] = #3600 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #900 1'b0;
	data[4] = #900 1'b1;
	data[4] = #1800 1'b0;
	data[4] = #900 1'b1;
	data[4] = #3600 1'b0;
	data[4] = #5400 1'b1;
	data[4] = #2700 1'b0;
	data[4] = #2700 1'b1;
	data[4] = #1800 1'b0;
end 
// data[ 3 ]
initial
begin
	data[3] = 1'b1;
	data[3] = #900 1'b0;
	data[3] = #9900 1'b1;
	data[3] = #7200 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #4500 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #6300 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #3600 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #4500 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #3600 1'b0;
	data[3] = #900 1'b1;
	data[3] = #3600 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #6300 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #4500 1'b1;
	data[3] = #3600 1'b0;
	data[3] = #900 1'b1;
	data[3] = #7200 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #3600 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #3600 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #3600 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #3600 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #5400 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #6300 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #6300 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #4500 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #5400 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #9000 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #3600 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #3600 1'b0;
	data[3] = #8100 1'b1;
	data[3] = #900 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #9000 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #4500 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #9900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #4500 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #4500 1'b1;
	data[3] = #5400 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #4500 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #5400 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #8100 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #11700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #3600 1'b0;
	data[3] = #4500 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #3600 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #3600 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #3600 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #5400 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #3600 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #2700 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #2700 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #900 1'b1;
	data[3] = #1800 1'b0;
	data[3] = #900 1'b1;
	data[3] = #900 1'b0;
	data[3] = #1800 1'b1;
	data[3] = #1800 1'b0;
end 
// data[ 2 ]
initial
begin
	data[2] = 1'b0;
	data[2] = #3600 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #6300 1'b1;
	data[2] = #900 1'b0;
	data[2] = #4500 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #3600 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #4500 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #3600 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #3600 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #6300 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #4500 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #4500 1'b1;
	data[2] = #900 1'b0;
	data[2] = #7200 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #3600 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #3600 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #4500 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #7200 1'b1;
	data[2] = #3600 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #4500 1'b0;
	data[2] = #3600 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #3600 1'b1;
	data[2] = #6300 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #5400 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #3600 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #5400 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #5400 1'b1;
	data[2] = #900 1'b0;
	data[2] = #4500 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #3600 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #4500 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #6300 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #3600 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #3600 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #3600 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #3600 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #4500 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #4500 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #3600 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #4500 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #5400 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #3600 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #4500 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #6300 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #3600 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #4500 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #5400 1'b0;
	data[2] = #900 1'b1;
	data[2] = #3600 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #3600 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #3600 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #3600 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #4500 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #4500 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #4500 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #5400 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #3600 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #9900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #3600 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #4500 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #3600 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #5400 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #3600 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #3600 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #900 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #4500 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #2700 1'b1;
	data[2] = #3600 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #900 1'b1;
	data[2] = #900 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #1800 1'b0;
	data[2] = #1800 1'b1;
	data[2] = #2700 1'b0;
	data[2] = #900 1'b1;
end 
// data[ 1 ]
initial
begin
	data[1] = 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #5400 1'b0;
	data[1] = #13500 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #6300 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #4500 1'b1;
	data[1] = #900 1'b0;
	data[1] = #4500 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #5400 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #4500 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #4500 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #5400 1'b1;
	data[1] = #4500 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #7200 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #4500 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #4500 1'b1;
	data[1] = #5400 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #4500 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #7200 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #7200 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #4500 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #4500 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #4500 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #4500 1'b0;
	data[1] = #900 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #8100 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #7200 1'b1;
	data[1] = #900 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #4500 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #4500 1'b1;
	data[1] = #7200 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #900 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #4500 1'b0;
	data[1] = #900 1'b1;
	data[1] = #4500 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #6300 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #6300 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #2700 1'b1;
	data[1] = #3600 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #5400 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #3600 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #1800 1'b1;
	data[1] = #900 1'b0;
	data[1] = #900 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #5400 1'b1;
	data[1] = #1800 1'b0;
	data[1] = #900 1'b1;
	data[1] = #2700 1'b0;
end 
// data[ 0 ]
initial
begin
	data[0] = 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #3600 1'b1;
	data[0] = #900 1'b0;
	data[0] = #3600 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #3600 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #4500 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #4500 1'b1;
	data[0] = #6300 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #3600 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #3600 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #4500 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #4500 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #6300 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #7200 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #6300 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #3600 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #4500 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #8100 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #4500 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #3600 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #4500 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #6300 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #3600 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #3600 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #4500 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #8100 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #4500 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #4500 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #6300 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #3600 1'b1;
	data[0] = #900 1'b0;
	data[0] = #4500 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #3600 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #5400 1'b0;
	data[0] = #900 1'b1;
	data[0] = #4500 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #4500 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #900 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #900 1'b1;
	data[0] = #4500 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #4500 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #7200 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #4500 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #5400 1'b1;
	data[0] = #4500 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #6300 1'b0;
	data[0] = #3600 1'b1;
	data[0] = #3600 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #4500 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #4500 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #900 1'b1;
	data[0] = #2700 1'b0;
	data[0] = #3600 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #4500 1'b1;
	data[0] = #900 1'b0;
	data[0] = #9000 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #2700 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #8100 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #3600 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #1800 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #900 1'b0;
	data[0] = #900 1'b1;
	data[0] = #1800 1'b0;
	data[0] = #900 1'b1;
end 

// nRST
initial
begin
	nRST = 1'b0;
	nRST = #970000 1'b1;
	nRST = #10000 1'b0;
end 

RTLDesign_vlg_sample_tst tb_sample (
	.clk(clk),
	.data(data),
	.nRST(nRST),
	.sampler_tx(sampler)
);

RTLDesign_vlg_check_tst tb_out(
	.addr(addr),
	.done(done),
	.max(max),
	.min(min),
	.sampler_rx(sampler)
);
endmodule

